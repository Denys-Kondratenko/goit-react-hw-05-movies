{"version":3,"file":"static/js/186.49d925c4.chunk.js","mappings":"8SAGAA,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAS,CACbC,QAAQ,GAAD,OAJO,oCAKdC,SAAU,SAGCC,EAAmB,mCAAG,oGACVJ,EAAAA,EAAAA,IAAA,uBAAkC,CAAEC,OAAAA,IAD1B,cAC3BI,EAD2B,yBAE1BA,EAASC,KAAKC,SAFY,2CAAH,qDAKnBC,EAAiB,mCAAG,WAAMC,GAAN,uFACRT,EAAAA,EAAAA,IAAA,iBAAoBS,EAApB,KAA2B,CAAER,OAAAA,IADrB,cACzBI,EADyB,yBAExBA,EAASC,MAFe,2CAAH,sDAKjBI,EAAS,mCAAG,WAAMD,GAAN,uFACAT,EAAAA,EAAAA,IAAA,iBAAoBS,EAApB,aAAmC,CAAER,OAAAA,IADrC,cACjBI,EADiB,yBAEhBA,EAASC,KAAKK,MAFE,2CAAH,sDAKTC,EAAY,mCAAG,WAAMH,GAAN,uFACHT,EAAAA,EAAAA,IAAA,iBAAoBS,EAApB,aAAmC,CAAER,OAAAA,IADlC,cACpBI,EADoB,yBAGnBA,EAASC,KAAKC,SAHK,2CAAH,sDAMZM,EAAgB,mCAAG,WAAMC,GAAN,uFACPd,EAAAA,EAAAA,IAAA,8BACEc,EADF,+BAErB,CAAEb,OAAAA,IAH0B,cACxBI,EADwB,yBAKvBA,EAASC,KAAKC,SALS,2CAAH,qD,kHCoB7B,UA9CgB,WACd,IAAQQ,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,WAAS,GAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA4BJ,EAAAA,EAAAA,WAAS,GAArC,eAAOK,EAAP,KAAeC,EAAf,KAEMC,GAAWC,EAAAA,EAAAA,cAAW,iBAAC,oGAEzBJ,GAAS,GACTE,GAAU,GAHe,UAIIX,EAAAA,EAAAA,IAAaG,GAJjB,UAMK,KAFxBW,EAJmB,QAMNC,OANM,sBAOjB,IAAIC,MAPa,OASzBT,EAAWO,GACXH,GAAU,GAVe,kDAYzBA,GAAU,GACVF,EAAS,aAbgB,0DAe1B,CAACN,IAMJ,OAJAc,EAAAA,EAAAA,YAAU,WACRL,GACD,GAAE,CAACA,KAGF,gCACe,KAAZN,IACC,wBACGA,EAAQY,KAAI,SAAAC,GAAM,OACjB,2BACE,0BAAI,WAASA,EAAOC,WACpB,uBAAID,EAAOE,YAFJF,EAAOtB,GADC,MAQtBa,IAAU,SAAC,IAAD,IACVF,IAAS,uBAAIA,MAGnB,C","sources":["API.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '57e1b59327fa5f75a2550cb581fcbe1f';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst params = {\n  api_key: `${API_KEY}`,\n  language: 'en-US',\n};\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`/trending/movie/day?`, { params });\n  return response.data.results;\n};\n\nexport const fetchDetailsMovie = async id => {\n  const response = await axios.get(`/movie/${id}?`, { params });\n  return response.data;\n};\n\nexport const fetchCast = async id => {\n  const response = await axios.get(`/movie/${id}/credits?`, { params });\n  return response.data.cast;\n};\n\nexport const fetchReviews = async id => {\n  const response = await axios.get(`/movie/${id}/reviews?`, { params });\n\n  return response.data.results;\n};\n\nexport const fetchSearchMovie = async query => {\n  const response = await axios.get(\n    `/search/movie?query=${query}&include_adult=false&page=1`,\n    { params }\n  );\n  return response.data.results;\n};\n","import { fetchReviews } from 'API';\nimport { Loader } from 'components/Loader/Loader';\nimport { useCallback, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n\n  const [reviews, setReviews] = useState('');\n  const [error, setError] = useState(false);\n  const [loader, setLoader] = useState(false);\n\n  const FetchAPI = useCallback(async () => {\n    try {\n      setError(false);\n      setLoader(true);\n      const fetchedReviews = await fetchReviews(movieId);\n\n      if (fetchedReviews.length === 0) {\n        throw new Error();\n      }\n      setReviews(fetchedReviews);\n      setLoader(false);\n    } catch (error) {\n      setLoader(false);\n      setError('No images');\n    }\n  }, [movieId]);\n\n  useEffect(() => {\n    FetchAPI();\n  }, [FetchAPI]);\n\n  return (\n    <>\n      {reviews !== '' && (\n        <ul>\n          {reviews.map(review => (\n            <li key={review.id}>\n              <h3>Author: {review.author}</h3>\n              <p>{review.content}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n      {loader && <Loader />}\n      {error && <p>{error}</p>}\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["axios","params","api_key","language","fetchTrendingMovies","response","data","results","fetchDetailsMovie","id","fetchCast","cast","fetchReviews","fetchSearchMovie","query","movieId","useParams","useState","reviews","setReviews","error","setError","loader","setLoader","FetchAPI","useCallback","fetchedReviews","length","Error","useEffect","map","review","author","content"],"sourceRoot":""}