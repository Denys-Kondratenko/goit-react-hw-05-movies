{"version":3,"file":"static/js/114.4022db83.chunk.js","mappings":"8SAEMA,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,8BAElB,IAAMC,EAAmB,mCAAG,oGACVD,EAAAA,EAAAA,IAAA,uDAC2BD,GAChD,CAAC,GAH8B,cAC3BG,EAD2B,yBAK1BA,EAASC,KAAKC,SALY,2CAAH,qDAQnBC,EAAiB,mCAAG,WAAMC,GAAN,uFACRN,EAAAA,EAAAA,IAAA,mBACTM,EADS,mCACoBP,GACzC,CAAC,GAH4B,cACzBG,EADyB,yBAKxBA,EAASC,MALe,2CAAH,sDAQjBI,EAAS,mCAAG,WAAMD,GAAN,uFACAN,EAAAA,EAAAA,IAAA,mBACTM,EADS,2CAC4BP,GACjD,CAAC,GAHoB,cACjBG,EADiB,yBAKhBA,EAASC,KAAKK,MALE,2CAAH,sDAQTC,EAAY,mCAAG,WAAMH,GAAN,uFACHN,EAAAA,EAAAA,IAAA,mBACTM,EADS,2CAC4BP,GACjD,CAAC,GAHuB,cACpBG,EADoB,yBAMnBA,EAASC,KAAKC,SANK,2CAAH,sDASZM,EAAgB,mCAAG,WAAMC,GAAN,uFACPX,EAAAA,EAAAA,IAAA,gCACIW,EADJ,8DAC+DZ,GACpF,CAAC,GAH2B,cACxBG,EADwB,yBAKvBA,EAASC,KAAKC,SALS,2CAAH,qD,oDClB7B,IAlBmB,SAAC,GAAuB,IAArBQ,EAAoB,EAApBA,OACdC,GADkC,EAAZC,OACXC,EAAAA,EAAAA,OAEjB,OACE,8BACGH,EAAOI,KAAI,gBAAGV,EAAH,EAAGA,GAAIW,EAAP,EAAOA,eAAP,OACV,yBACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaZ,GAAMQ,MAAO,CAAEK,KAAMN,GAA1C,SACGI,OAHEX,EADC,KAWjB,C,wJC+BD,EA3CkB,WAChB,OAA4Bc,EAAAA,EAAAA,UAAS,IAArC,eAAOR,EAAP,KAAeS,EAAf,KACA,GAA0BD,EAAAA,EAAAA,WAAS,GAAnC,eAAOE,EAAP,KAAcC,EAAd,KACA,GAA4BH,EAAAA,EAAAA,WAAS,GAArC,eAAOI,EAAP,KAAeC,EAAf,KAEMC,GAAWC,EAAAA,EAAAA,cAAW,iBAAC,oGAEzBJ,GAAS,GACTE,GAAU,GAHe,UAIGxB,EAAAA,EAAAA,MAJH,UAKI,KADvB2B,EAJmB,QAKPC,OALO,sBAMjB,IAAIC,MANa,OAQzBT,EAAUO,GACVH,GAAU,GATe,kDAWzBA,GAAU,GACVF,EAAS,aAZgB,0DAc1B,IAMH,OAJAQ,EAAAA,EAAAA,YAAU,WACRL,GACD,GAAE,CAACA,KAGF,iCACE,0BACE,SAACM,EAAA,EAAD,CAAYpB,OAAQA,MASrBY,IAAU,SAACS,EAAA,EAAD,IACVX,IAAS,uBAAIA,MAGnB,ECpCD,EATa,WACX,OACE,6BACE,wBAAI,oBACJ,SAAC,EAAD,MAGL,C","sources":["API.js","components/MoviesList/MoviesList.jsx","components/GetMovies/GetMovies.jsx","pages/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '57e1b59327fa5f75a2550cb581fcbe1f';\naxios.defaults.baseURL = 'https://api.themoviedb.org/';\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(\n    `/3/trending/movie/day?language=en-US&api_key=${API_KEY}`,\n    {}\n  );\n  return response.data.results;\n};\n\nexport const fetchDetailsMovie = async id => {\n  const response = await axios.get(\n    `/3/movie/${id}?language=en-US&api_key=${API_KEY}`,\n    {}\n  );\n  return response.data;\n};\n\nexport const fetchCast = async id => {\n  const response = await axios.get(\n    `/3/movie/${id}/credits?language=en-US&api_key=${API_KEY}`,\n    {}\n  );\n  return response.data.cast;\n};\n\nexport const fetchReviews = async id => {\n  const response = await axios.get(\n    `/3/movie/${id}/reviews?language=en-US&api_key=${API_KEY}`,\n    {}\n  );\n\n  return response.data.results;\n};\n\nexport const fetchSearchMovie = async query => {\n  const response = await axios.get(\n    `/3/search/movie?query=${query}&include_adult=false&language=en-US&page=1&api_key=${API_KEY}`,\n    {}\n  );\n  return response.data.results;\n};\n","import { Link, useLocation } from 'react-router-dom';\n\nconst MoviesList = ({ movies, state }) => {\n  const location = useLocation();\n\n  return (\n    <>\n      {movies.map(({ id, original_title }) => (\n        <ul key={id}>\n          <li>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              {original_title}\n            </Link>\n          </li>\n        </ul>\n      ))}\n    </>\n  );\n};\n\nexport default MoviesList;\n","import { fetchTrendingMovies } from 'API';\nimport { Loader } from 'components/Loader/Loader';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { useCallback, useEffect, useState } from 'react';\n// import { Link } from 'react-router-dom';\n\nconst GetMovies = () => {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(false);\n  const [loader, setLoader] = useState(false);\n\n  const FetchAPI = useCallback(async () => {\n    try {\n      setError(false);\n      setLoader(true);\n      const fetchedMovies = await fetchTrendingMovies();\n      if (fetchedMovies.length === 0) {\n        throw new Error();\n      }\n      setMovies(fetchedMovies);\n      setLoader(false);\n    } catch (error) {\n      setLoader(false);\n      setError('No images');\n    }\n  }, []);\n\n  useEffect(() => {\n    FetchAPI();\n  }, [FetchAPI]);\n\n  return (\n    <>\n      <div>\n        <MoviesList movies={movies} />\n        {/* {movies.map(movie => (\n          <ul key={movie.id}>\n            <li>\n              <Link to={`/movies/${movie.id}`}>{movie.original_title}</Link>\n            </li>\n          </ul>\n        ))} */}\n      </div>\n      {loader && <Loader />}\n      {error && <p>{error}</p>}\n    </>\n  );\n};\n\nexport default GetMovies;\n","import GetMovies from 'components/GetMovies/GetMovies';\n\nconst Home = () => {\n  return (\n    <main>\n      <h1>Trending today</h1>\n      <GetMovies />\n    </main>\n  );\n};\n\nexport default Home;\n"],"names":["API_KEY","axios","fetchTrendingMovies","response","data","results","fetchDetailsMovie","id","fetchCast","cast","fetchReviews","fetchSearchMovie","query","movies","location","state","useLocation","map","original_title","to","from","useState","setMovies","error","setError","loader","setLoader","FetchAPI","useCallback","fetchedMovies","length","Error","useEffect","MoviesList","Loader"],"sourceRoot":""}