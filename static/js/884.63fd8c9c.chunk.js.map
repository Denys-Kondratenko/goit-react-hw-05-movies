{"version":3,"file":"static/js/884.63fd8c9c.chunk.js","mappings":"8SAEMA,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,8BAElB,IAAMC,EAAmB,mCAAG,oGACVD,EAAAA,EAAAA,IAAA,uDAC2BD,GAChD,CAAC,GAH8B,cAC3BG,EAD2B,yBAK1BA,EAASC,KAAKC,SALY,2CAAH,qDAQnBC,EAAiB,mCAAG,WAAMC,GAAN,uFACRN,EAAAA,EAAAA,IAAA,mBACTM,EADS,mCACoBP,GACzC,CAAC,GAH4B,cACzBG,EADyB,yBAKxBA,EAASC,MALe,2CAAH,sDAQjBI,EAAS,mCAAG,WAAMD,GAAN,uFACAN,EAAAA,EAAAA,IAAA,mBACTM,EADS,2CAC4BP,GACjD,CAAC,GAHoB,cACjBG,EADiB,yBAKhBA,EAASC,KAAKK,MALE,2CAAH,sDAQTC,EAAY,mCAAG,WAAMH,GAAN,uFACHN,EAAAA,EAAAA,IAAA,mBACTM,EADS,2CAC4BP,GACjD,CAAC,GAHuB,cACpBG,EADoB,yBAMnBA,EAASC,KAAKC,SANK,2CAAH,sDASZM,EAAgB,mCAAG,WAAMC,GAAN,uFACPX,EAAAA,EAAAA,IAAA,gCACIW,EADJ,8DAC+DZ,GACpF,CAAC,GAH2B,cACxBG,EADwB,yBAKvBA,EAASC,KAAKC,SALS,2CAAH,qD,0HCkD7B,UAnFqB,WAAO,IAAD,IACjBQ,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,WAAS,GAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA4BJ,EAAAA,EAAAA,WAAS,GAArC,eAAOK,EAAP,KAAeC,EAAf,KAGMC,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAEvCC,GAAWC,EAAAA,EAAAA,cAAW,iBAAC,oGAEzBR,GAAS,GACTE,GAAU,GAHe,UAIEf,EAAAA,EAAAA,IAAkBO,GAJpB,UAMG,KAFtBe,EAJmB,QAMRC,OANQ,sBAOjB,IAAIC,MAPa,OASzBb,EAASW,GACTP,GAAU,GAVe,kDAYzBA,GAAU,GACVF,EAAS,aAbgB,0DAe1B,CAACN,KAEJkB,EAAAA,EAAAA,YAAU,WACRL,GACD,GAAE,CAACA,IAEJ,IACEM,EAOEhB,EAPFgB,YACAC,EAMEjB,EANFiB,eACAC,EAKElB,EALFkB,aACAC,EAIEnB,EAJFmB,aACAC,EAGEpB,EAHFoB,SACAC,EAEErB,EAFFqB,OACA9B,EACES,EADFT,GAGF,OACE,iCACE,SAAC,KAAD,CAAM+B,GAAIhB,EAAV,SAAwB,qBAEb,KAAVN,IACC,4BACE,gBACEuB,IAAG,yCAAoCP,GACvCQ,IAAKP,KAEP,4BACE,0BACGA,EAAe,KAAGC,EAAaO,MAAM,EAAG,GAAG,QAE9C,yBAAG,eAAaC,KAAKC,MAAqB,GAAfR,GAAmB,QAC9C,wBAAI,cACJ,uBAAIC,KACJ,wBAAI,YACJ,uBAAIC,EAAOO,KAAI,SAAAC,GAAI,OAAIA,EAAKC,IAAT,IAAeC,KAAK,WAEzC,4BACE,uBAAG,2BACH,2BACE,yBACE,SAAC,KAAD,CAAMT,GAAE,kBAAa/B,EAAb,SAAR,SAAgC,YAElC,yBACE,SAAC,KAAD,CAAM+B,GAAE,kBAAa/B,EAAb,YAAR,SAAmC,qBAIzC,SAAC,EAAAyC,SAAD,CAAUC,UAAU,SAAC,IAAD,IAApB,UACE,SAAC,KAAD,SAIL7B,IAAU,SAAC,IAAD,IACVF,IAAS,uBAAIA,MAGnB,C","sources":["API.js","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '57e1b59327fa5f75a2550cb581fcbe1f';\naxios.defaults.baseURL = 'https://api.themoviedb.org/';\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(\n    `/3/trending/movie/day?language=en-US&api_key=${API_KEY}`,\n    {}\n  );\n  return response.data.results;\n};\n\nexport const fetchDetailsMovie = async id => {\n  const response = await axios.get(\n    `/3/movie/${id}?language=en-US&api_key=${API_KEY}`,\n    {}\n  );\n  return response.data;\n};\n\nexport const fetchCast = async id => {\n  const response = await axios.get(\n    `/3/movie/${id}/credits?language=en-US&api_key=${API_KEY}`,\n    {}\n  );\n  return response.data.cast;\n};\n\nexport const fetchReviews = async id => {\n  const response = await axios.get(\n    `/3/movie/${id}/reviews?language=en-US&api_key=${API_KEY}`,\n    {}\n  );\n\n  return response.data.results;\n};\n\nexport const fetchSearchMovie = async query => {\n  const response = await axios.get(\n    `/3/search/movie?query=${query}&include_adult=false&language=en-US&page=1&api_key=${API_KEY}`,\n    {}\n  );\n  return response.data.results;\n};\n","import { fetchDetailsMovie } from 'API';\nimport { Loader } from 'components/Loader/Loader';\nimport { Suspense, useCallback, useEffect, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n\n  const [movie, setMovie] = useState('');\n  const [error, setError] = useState(false);\n  const [loader, setLoader] = useState(false);\n\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  const FetchAPI = useCallback(async () => {\n    try {\n      setError(false);\n      setLoader(true);\n      const fetchedMovie = await fetchDetailsMovie(movieId);\n\n      if (fetchedMovie.length === 0) {\n        throw new Error();\n      }\n      setMovie(fetchedMovie);\n      setLoader(false);\n    } catch (error) {\n      setLoader(false);\n      setError('No images');\n    }\n  }, [movieId]);\n\n  useEffect(() => {\n    FetchAPI();\n  }, [FetchAPI]);\n\n  const {\n    poster_path,\n    original_title,\n    release_date,\n    vote_average,\n    overview,\n    genres,\n    id,\n  } = movie;\n\n  return (\n    <>\n      <Link to={backLinkHref}>Back to products</Link>\n\n      {movie !== '' && (\n        <div>\n          <img\n            src={`https://image.tmdb.org/t/p/w300${poster_path}`}\n            alt={original_title}\n          />\n          <div>\n            <h2>\n              {original_title} ({release_date.slice(0, 4)})\n            </h2>\n            <p>User Score: {Math.round(vote_average * 10)}%</p>\n            <h3>Overview</h3>\n            <p>{overview}</p>\n            <h4>Genres</h4>\n            <p>{genres.map(genr => genr.name).join(' ')}</p>\n          </div>\n          <div>\n            <p>Additinal information</p>\n            <ul>\n              <li>\n                <Link to={`/movies/${id}/cast`}>Cast</Link>\n              </li>\n              <li>\n                <Link to={`/movies/${id}/reviews`}>Reviews</Link>\n              </li>\n            </ul>\n          </div>\n          <Suspense fallback={<Loader />}>\n            <Outlet />\n          </Suspense>\n        </div>\n      )}\n      {loader && <Loader />}\n      {error && <p>{error}</p>}\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["API_KEY","axios","fetchTrendingMovies","response","data","results","fetchDetailsMovie","id","fetchCast","cast","fetchReviews","fetchSearchMovie","query","movieId","useParams","useState","movie","setMovie","error","setError","loader","setLoader","backLinkHref","useLocation","state","from","FetchAPI","useCallback","fetchedMovie","length","Error","useEffect","poster_path","original_title","release_date","vote_average","overview","genres","to","src","alt","slice","Math","round","map","genr","name","join","Suspense","fallback"],"sourceRoot":""}