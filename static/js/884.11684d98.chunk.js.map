{"version":3,"file":"static/js/884.11684d98.chunk.js","mappings":"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","sources":["API.js","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '57e1b59327fa5f75a2550cb581fcbe1f';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst params = {\n  api_key: `${API_KEY}`,\n  language: 'en-US',\n};\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`/trending/movie/day?`, { params });\n  return response.data.results;\n};\n\nexport const fetchDetailsMovie = async id => {\n  const response = await axios.get(`/movie/${id}?`, { params });\n  return response.data;\n};\n\nexport const fetchCast = async id => {\n  const response = await axios.get(`/movie/${id}/credits?`, { params });\n  return response.data.cast;\n};\n\nexport const fetchReviews = async id => {\n  const response = await axios.get(`/movie/${id}/reviews?`, { params });\n\n  return response.data.results;\n};\n\nexport const fetchSearchMovie = async query => {\n  const response = await axios.get(\n    `/search/movie?query=${query}&include_adult=false&page=1`,\n    { params }\n  );\n  return response.data.results;\n};\n","import { fetchDetailsMovie } from 'API';\nimport { Loader } from 'components/Loader/Loader';\nimport { Suspense, useCallback, useEffect, useRef, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n\n  const [movie, setMovie] = useState('');\n  const [error, setError] = useState(false);\n  const [loader, setLoader] = useState(false);\n\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from ?? '/');\n\n  const FetchAPI = useCallback(async () => {\n    try {\n      setError(false);\n      setLoader(true);\n      const fetchedMovie = await fetchDetailsMovie(movieId);\n\n      if (fetchedMovie.length === 0) {\n        throw new Error();\n      }\n      setMovie(fetchedMovie);\n      setLoader(false);\n    } catch (error) {\n      setLoader(false);\n      setError('No images');\n    }\n  }, [movieId]);\n\n  useEffect(() => {\n    FetchAPI();\n  }, [FetchAPI]);\n\n  const {\n    poster_path,\n    original_title,\n    release_date,\n    vote_average,\n    overview,\n    genres,\n    id,\n  } = movie;\n\n  return (\n    <>\n      <Link to={backLinkHref.current}>Back to products</Link>\n\n      {movie !== '' && (\n        <div>\n          <img\n            src={`https://image.tmdb.org/t/p/w300${poster_path}`}\n            alt={original_title}\n          />\n          <div>\n            <h2>\n              {original_title} ({release_date.slice(0, 4)})\n            </h2>\n            <p>User Score: {Math.round(vote_average * 10)}%</p>\n            <h3>Overview</h3>\n            <p>{overview}</p>\n            <h4>Genres</h4>\n            <p>{genres.map(genr => genr.name).join(' ')}</p>\n          </div>\n          <div>\n            <p>Additinal information</p>\n            <ul>\n              <li>\n                <Link to={`/movies/${id}/cast`}>Cast</Link>\n              </li>\n              <li>\n                <Link to={`/movies/${id}/reviews`}>Reviews</Link>\n              </li>\n            </ul>\n          </div>\n          <Suspense fallback={<Loader />}>\n            <Outlet />\n          </Suspense>\n        </div>\n      )}\n      {loader && <Loader />}\n      {error && <p>{error}</p>}\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["axios","params","api_key","language","fetchTrendingMovies","response","data","results","fetchDetailsMovie","id","fetchCast","cast","fetchReviews","fetchSearchMovie","query","movieId","useParams","useState","movie","setMovie","error","setError","loader","setLoader","location","useLocation","backLinkHref","useRef","state","from","FetchAPI","useCallback","fetchedMovie","length","Error","useEffect","poster_path","original_title","release_date","vote_average","overview","genres","to","current","src","alt","slice","Math","round","map","genr","name","join","Suspense","fallback"],"sourceRoot":""}